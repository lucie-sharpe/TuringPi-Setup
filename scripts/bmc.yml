---
- name: Configure BMC
  hosts: bmc
  gather_facts: false
  become: true

  vars_files:
    - config.yml

  tasks:
    - name: Check SSH keys
      ansible.builtin.raw: "grep -Fxq '{{ ssh_public_key }}' /root/.ssh/authorized_keys"
      register: ssh_auth_key_check
      failed_when: false
      changed_when: false

    - name: Setup SSH
      when: ssh_auth_key_check.rc == 0
      block:
        - name: Add SSH key authorisation
          ansible.builtin.raw: |
            mkdir -p /root/.ssh
            echo -e "\n{{ ssh_public_key }}" >> /root/.ssh/authorized_keys

        - name: Update SSH config
          ansible.builtin.raw: "sed -i -e 's/^PasswordAuthentication yes/PasswordAuthentication no/' -e 's/^#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config"

        - name: Reaload SSH deamon
          ansible.builtin.raw: systemctl reload sshd

#    - name: Check IP
#    - name: Set static IP
#    - name: Check DNS
#    - name: Set DNS

- name: Prepare nodes
  hosts: bmc
  gather_facts: false
  become: true

  vars_files:
    - config.yml

  tasks:
    - name: Power off nodes
      ansible.builtin.raw: tpi power off

    - name: Check sdcard is mounted and formated as ext4
      ansible.builtin.raw: "mountpoint -q {{ sd_card_dir }} && grep -q \"{{ sd_card_dir }} ext4\" /proc/mounts"
      register: sd_mount_check
      failed_when: false
      changed_when: false

    - name: Fail if SD card is not mounted
      ansible.builtin.fail:
        msg: "SD card must be inserted and formated to ext4. Python can not be loaded on BMC."
      when: sd_mount_check.rc != 0

    - name: Flash and setup nodes
      when: sd_mount_check.rc == 0
      block:
        - name: Download image
          ansible.builtin.raw: |
            set -e
            mkdir -p {{ bmc_images_dir }}
            rm -f {{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img.xz*
            curl -s -L -o "{{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img.xz" "https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2025-05-13/2025-05-13-raspios-bookworm-arm64-lite.img.xz"
            curl -s -L -o "{{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img.xz.sha256" "https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2025-05-13/2025-05-13-raspios-bookworm-arm64-lite.img.xz.sha256"
            sha256sum -c {{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img.xz.sha256

        - name: Extract image
          ansible.builtin.raw: |
            set -e
            xz -d {{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img.xz

        - name: Flash nodes
          ansible.builtin.raw: |
            tpi flash --node 1 --local --image-path {{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img
            tpi flash --node 2 --local --image-path {{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img
            tpi flash --node 3 --local --image-path {{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img
            tpi flash --node 4 --local --image-path {{ bmc_images_dir }}/2025-05-13-raspios-bookworm-arm64-lite.img

        # TODO: Dose this cause the pi to reboot and execute first run script?

        - name: Start nodes as MSD
          ansible.builtin.raw: |
            tpi advanced msd --node 1
            tpi advanced msd --node 2
            tpi advanced msd --node 3
            tpi advanced msd --node 4

        - name: Mount nodes bootfs
          ansible.builtin.raw: |
            mkdir -p /mnt/node1
            mkdir -p /mnt/node2
            mkdir -p /mnt/node3
            mkdir -p /mnt/node4

            mount /dev/sda1 /mnt/node1
            mount /dev/sdb1 /mnt/node2
            mount /dev/sdc1 /mnt/node3
            mount /dev/sdd1 /mnt/node4

        - name: Enable UART on nodes
          ansible.builtin.raw: |
            sed -i '/^\[all\]/a enable_uart=1' /mnt/node1/config.txt
            sed -i '/^\[all\]/a enable_uart=1' /mnt/node2/config.txt
            sed -i '/^\[all\]/a enable_uart=1' /mnt/node3/config.txt
            sed -i '/^\[all\]/a enable_uart=1' /mnt/node4/config.txt

        #    IF POSSIBLE MODIFY THE FIRST RUN SCRIPT TO DO THESE SETTINGS:
        #    - name: Set node hostname
        #    - name: Set node SSH public-key
        #    - name: Configure SSH on node
        #    - name: Set node localisation

        - name: Unmount nodes
          ansible.builtin.raw: |
            umount /mnt/node1
            umount /mnt/node2
            umount /mnt/node3
            umount /mnt/node4

        - name: Restart nodes
          ansible.builtin.raw: |
            tpi power off
            tpi power on

- name: Ensure all nodes are reachable
  hosts: cluster
  gather_facts: no
  tasks:
    - name: Wait for connection
      wait_for_connection:
        timeout: 300
        delay: 30